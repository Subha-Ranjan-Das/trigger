name: Track Code Changes

on:
  push:
    branches: ["main"]  # Adjust branch as needed

jobs:
  track_changes:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      # Step 3: Install GitPython
      - name: Install GitPython
        run: pip install gitpython

      # Step 4: Compare Commits and Generate Report
      - name: Compare Commits and Generate Report
        run: |
          python - <<EOF
          import git

          # Function to generate diff report
          def generate_diff_report():
              # Initialize the repository
              repo = git.Repo(".")

              # Get all commits in the main branch
              commits = list(repo.iter_commits('main'))

              # Define GitHub repo details
              username = "Subha-Ranjan-Das"       # Replace with your GitHub username
              repo_name = "trigger"     # Replace with your repository name

              # Check for commits and generate a report accordingly
              if len(commits) == 0:
                  print("No commits in the branch.")
                  with open("diff_report.txt", "w") as report:
                      report.write("No commits in the branch to generate a diff.\n")
                  return

              if len(commits) == 1:
                  # Compare the single commit against an empty tree (initial commit)
                  diff_text = repo.git.diff(commits[0].tree)
                  compare_url = f"https://github.com/{username}/{repo_name}/commit/{commits[0].hexsha}"
              else:
                  # Get the last two commits and compare them
                  diff_text = repo.git.diff(commits[1], commits[0], name_status=True)
                  compare_url = f"https://github.com/{username}/{repo_name}/compare/{commits[1].hexsha}...{commits[0].hexsha}"

              # Write the diff and URL to diff_report.txt
              with open("diff_report.txt", "w") as report:
                  if diff_text:
                      report.write(diff_text + "\n")
                      report.write(f"\nGitHub Compare URL: {compare_url}\n")
                      print("Diff report generated successfully.")
                  else:
                      report.write("No changes detected between the commits.\n")
                      report.write(f"\nGitHub Compare URL: {compare_url}\n")
                      print("No changes detected between the commits.")

          # Execute the diff report generation
          generate_diff_report()
          EOF

      # Step 5: Upload the generated diff report as an artifact
      - name: Upload Diff Report
        uses: actions/upload-artifact@v3
        with:
          name: Diff Report
          path: diff_report.txt
